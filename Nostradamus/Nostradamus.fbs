namespace Nostradamus.Schema;

// Common
table MessageEnvelope {
	id: string;
	data: [ubyte];
}

table ActorId {
	value: int;
	description: string;
}

table ClientId {
	value: int;
	description: string;
}

table Command {
	clientId: ClientId (required);
	actorId: ActorId (required);
	sequence: int;
	time: int;
	deltaTime: int;
	args: MessageEnvelope (required);
}

table Event {
	actorId: ActorId (required);
	args: MessageEnvelope (required);
}

table ActorSnapshot {
    desc: MessageEnvelope (required);
    args: MessageEnvelope (required);
}

table SimulatorSnapshot {
    actors: [ActorSnapshot];
}

// Client
table CommandFrame {
	clientId: ClientId (required);
	commands: [Command];
}

// Server
table FullSyncFrame {
	time: int;
	deltaTime: int;
	snapshot: SimulatorSnapshot;
}

table CommandSeq {
	clientId: ClientId (required);
	sequence: int;
}

table DeltaSyncFrame {
	time: int;
	deltaTime: int;
	events: [Event];
	lastCommandSeqs: [CommandSeq];
}

table Login {
    clientId: ClientId (required);
}

// Physics
table Vector3 {
	x: float;
	y: float;
	z: float;
}

table Quaternion {
	x: float;
	y: float;
	z: float;
	w: float;	
}

table RigidBodyMovedEvent {
	position: Vector3;
	rotation: Quaternion;
	linearVelocity: Vector3;
	angularVelocity: Vector3;
}

table RigidBodySnapshot {
	position: Vector3;
	rotation: Quaternion;
	linearVelocity: Vector3;
	angularVelocity: Vector3;
}

// Examples
table BallDesc {
    id: ActorId (required);
    initialPosition: Vector3 (required);
}

table CubeDesc {
    id: ActorId (required);
    initialPosition: Vector3 (required);
}

table KickBallCommand {
    inputX: float;
    inputY: float;
    inputZ: float;
}

table SceneInitializedEvent {
}
// automatically generated by the FlatBuffers compiler, do not modify

namespace Nostradamus.Schema
{

using System;
using FlatBuffers;

public struct DeltaSyncFrame : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static DeltaSyncFrame GetRootAsDeltaSyncFrame(ByteBuffer _bb) { return GetRootAsDeltaSyncFrame(_bb, new DeltaSyncFrame()); }
  public static DeltaSyncFrame GetRootAsDeltaSyncFrame(ByteBuffer _bb, DeltaSyncFrame obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public DeltaSyncFrame __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Time { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int DeltaTime { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public Event? Events(int j) { int o = __p.__offset(8); return o != 0 ? (Event?)(new Event()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int EventsLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }
  public CommandSeq? LastCommandSeqs(int j) { int o = __p.__offset(10); return o != 0 ? (CommandSeq?)(new CommandSeq()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int LastCommandSeqsLength { get { int o = __p.__offset(10); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<DeltaSyncFrame> CreateDeltaSyncFrame(FlatBufferBuilder builder,
      int time = 0,
      int deltaTime = 0,
      VectorOffset eventsOffset = default(VectorOffset),
      VectorOffset lastCommandSeqsOffset = default(VectorOffset)) {
    builder.StartObject(4);
    DeltaSyncFrame.AddLastCommandSeqs(builder, lastCommandSeqsOffset);
    DeltaSyncFrame.AddEvents(builder, eventsOffset);
    DeltaSyncFrame.AddDeltaTime(builder, deltaTime);
    DeltaSyncFrame.AddTime(builder, time);
    return DeltaSyncFrame.EndDeltaSyncFrame(builder);
  }

  public static void StartDeltaSyncFrame(FlatBufferBuilder builder) { builder.StartObject(4); }
  public static void AddTime(FlatBufferBuilder builder, int time) { builder.AddInt(0, time, 0); }
  public static void AddDeltaTime(FlatBufferBuilder builder, int deltaTime) { builder.AddInt(1, deltaTime, 0); }
  public static void AddEvents(FlatBufferBuilder builder, VectorOffset eventsOffset) { builder.AddOffset(2, eventsOffset.Value, 0); }
  public static VectorOffset CreateEventsVector(FlatBufferBuilder builder, Offset<Event>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartEventsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddLastCommandSeqs(FlatBufferBuilder builder, VectorOffset lastCommandSeqsOffset) { builder.AddOffset(3, lastCommandSeqsOffset.Value, 0); }
  public static VectorOffset CreateLastCommandSeqsVector(FlatBufferBuilder builder, Offset<CommandSeq>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartLastCommandSeqsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<DeltaSyncFrame> EndDeltaSyncFrame(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<DeltaSyncFrame>(o);
  }
};


}
